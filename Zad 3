using System;

interface IDevice
{
    void PowerOn();
    void PowerOff();
}

interface IPrinter : IDevice
{
    void Print(in IDocument document);
}

interface IScanner : IDevice
{
    void Scan(out IDocument document);
}

class PDFDocument : IDocument
{
    public string Name { get; }

    public PDFDocument(string name)
    {
        Name = name;
    }
}

class Printer : IPrinter
{
    private bool isOn;
    private int counter;
    private int printCounter;

    public void PowerOn()
    {
        if (!isOn)
        {
            isOn = true;
            Console.WriteLine("Printer is turned on");
        }
    }

    public void PowerOff()
    {
        if (isOn)
        {
            isOn = false;
            Console.WriteLine("Printer is turned off");
        }
    }

    public void Print(in IDocument document)
    {
        if (isOn)
        {
            printCounter++;
            Console.WriteLine($"{DateTime.Now} Print: {document.Name}");
        }
    }
}

class Scanner : IScanner
{
    private bool isOn;
    private int counter;
    private int scanCounter;

    public void PowerOn()
    {
        if (!isOn)
        {
            isOn = true;
            Console.WriteLine("Scanner is turned on");
        }
    }

    public void PowerOff()
    {
        if (isOn)
        {
            isOn = false;
            Console.WriteLine("Scanner is turned off");
        }
    }

    public void Scan(out IDocument document)
    {
        document = null;
        if (isOn)
        {
            scanCounter++;
            string scanName = $"ImageScan{scanCounter}.jpg";
            document = new ImageDocument(scanName);
            Console.WriteLine($"{DateTime.Now} Scan: {scanName}");
        }
    }
}

class ImageDocument : IDocument
{
    public string Name { get; }

    public ImageDocument(string name)
    {
        Name = name;
    }
}

class Copier : IDevice
{
    private readonly IPrinter printer;
    private readonly IScanner scanner;

    public Copier(IPrinter printer, IScanner scanner)
    {
        this.printer = printer;
        this.scanner = scanner;
    }

    public void PowerOn()
    {
        printer.PowerOn();
        scanner.PowerOn();
        Console.WriteLine("Copier is turned on");
    }

    public void PowerOff()
    {
        printer.PowerOff();
        scanner.PowerOff();
        Console.WriteLine("Copier is turned off");
    }

    public void ScanAndPrint()
    {
        IDocument document;
        scanner.Scan(out document);
        if (document != null)
        {
            printer.Print(document);
        }
    }
}

class Program
{
    static void Main()
    {
        var printer = new Printer();
        var scanner = new Scanner();
        var copier = new Copier(printer, scanner);

        copier.PowerOn();
        copier.ScanAndPrint();

        copier.PowerOff();
    }
}
